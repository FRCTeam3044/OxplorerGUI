name: Build

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"
  pull_request:
  release:
    types: [published]

jobs:
  compile:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile
      - name: Check formatting
        run: yarn check-format

  build-win:
    name: Build for Windows (${{ matrix.arch }})
    needs: compile
    runs-on: windows-latest
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        arch: ["x64", "arm64"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile
      - name: Build with electron forge
        run: yarn make -- --arch=${{ matrix.arch }} --platform win32
      - name: Prepare artifact
        run: |
          Move-Item -Path "out\make\squirrel.windows\${{ matrix.arch }}\OxplorerGUI*.exe" -Destination "OxplorerGUI-${{ matrix.arch }}-dev.exe"
      - name: Upload development artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: OxplorerGUI-${{ matrix.arch }}-dev.exe
          path: OxplorerGUI-${{ matrix.arch }}-dev.exe
      - name: "Release: Get release info"
        if: github.event_name == 'release'
        id: get_release_info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
      - name: "Release: Upload artifact"
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: OxplorerGUI-${{ matrix.arch }}-dev.exe
          asset_name: OxplorerGUI-win-${{ matrix.arch }}-${{ steps.get_release_info.outputs.tag_name }}.exe
          asset_content_type: "application/octet-stream"

  build-mac:
    name: Build for macOS (${{ matrix.arch }})
    needs: compile
    runs-on: macos-latest
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        arch: ["x64", "arm64"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile
      - name: Build with electron forge
        run: yarn make -- --arch=${{ matrix.arch }} --platform darwin
      - name: Prepare artifact
        run: mv out/make/OxplorerGUI*.dmg OxplorerGUI-${{ matrix.arch }}-dev.dmg
      - name: Upload development artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: OxplorerGUI-${{ matrix.arch }}-dev.dmg
          path: OxplorerGUI-${{ matrix.arch }}-dev.dmg
      - name: "Release: Get release info"
        if: github.event_name == 'release'
        id: get_release_info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
      - name: "Release: Upload artifact"
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: OxplorerGUI-${{ matrix.arch }}-dev.dmg
          asset_name: OxplorerGUI-mac-${{ matrix.arch }}-${{ steps.get_release_info.outputs.tag_name }}.dmg
          asset_content_type: "application/octet-stream"

  build-linux:
    name: Build for Linux/${{ matrix.format }} (${{ matrix.arch }})
    needs: compile
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        format: ["deb", "rpm", "AppImage"]
        arch: ["x64", "arm64", "armv7l"]
    env:
      TARGETS: '{"deb": "@electron-forge/maker-deb", "rpm": "@electron-forge/maker-rpm", "AppImage": "electron-forge-maker-appimage"}'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "yarn"
      - name: Install Node.js dependencies
        run: yarn install --frozen-lockfile
      - name: Install Linux packages
        run: |
          sudo apt-get update; sudo apt-get install --no-install-recommends -y libarchive-tools
      - name: Build app
        run: |
          yarn make -- --arch=${{ matrix.arch }} --platform linux --targets ${{ fromJson(env.TARGETS)[matrix.format] }}
      - name: Set BUILD_DIR
        id: build_dir
        run: |
          echo "::set-output name=dir::$(echo '{"deb": "deb/${{ matrix.arch }}", "rpm": "rpm/${{ matrix.arch }}", "AppImage": "."}')"

      - name: Prepare artifact
        run: |
          shopt -s nocaseglob
          for file in out/make/${{ fromJson(steps.build_dir.outputs.dir)[matrix.format] }}/*[oO][xX][pP][lL][oO][rR][eE][rR]*.${{ matrix.format }}; do
              mv "$file" OxplorerGUI-${{ matrix.arch }}-dev.${{ matrix.format }}
          done
          shopt -u nocaseglob
      - name: Upload development artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: OxplorerGUI-${{ matrix.arch }}-dev.${{ matrix.format }}
          path: OxplorerGUI-${{ matrix.arch }}-dev.${{ matrix.format }}
      - name: "Release: Get release info"
        if: github.event_name == 'release'
        id: get_release_info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
      - name: "Release: Upload artifact"
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: OxplorerGUI-${{ matrix.arch }}-dev.${{ matrix.format }}
          asset_name: OxplorerGUI-linux-${{ matrix.arch }}-${{ steps.get_release_info.outputs.tag_name }}.${{ matrix.format }}
          asset_content_type: "application/octet-stream"

  finalize-release:
    name: Finalize Release
    needs: [build-win, build-mac, build-linux]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Get release info
        id: get_release_info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
      - name: Edit release
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ github.event.release.id }}
          prerelease: false
          replacebody: false
          body: '<table> <tr> <th colspan="4">Common Downloads</th> </tr> <tr> <td colspan="4">ü™ü <a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-win-x64-${{ steps.get_release_info.outputs.tag_name }}.exe">Windows x64</a></td> </tr> <tr> <td colspan="4">üçé <a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-mac-x64-${{ steps.get_release_info.outputs.tag_name }}.dmg">macOS Intel</a></td> </tr> <tr> <td colspan="4">üêß <a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-x64-${{ steps.get_release_info.outputs.tag_name }}.deb">Linux x86 Deb</a></td> </tr> <tr> <th colspan="4">All Downloads</th> </tr> <tr> <td>Windows</td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-win-x64-${{ steps.get_release_info.outputs.tag_name }}.exe">x64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-win-arm64-${{ steps.get_release_info.outputs.tag_name }}.exe">arm64</a> </td> <td></td> </tr> <tr> <td>macOS</td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-mac-x64-${{ steps.get_release_info.outputs.tag_name }}.dmg">x64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-mac-arm64-${{ steps.get_release_info.outputs.tag_name }}.dmg">arm64</a> </td> <td></td> </tr> <tr> <td>Linux/deb</td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-x64-${{ steps.get_release_info.outputs.tag_name }}.deb">x64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-arm64-${{ steps.get_release_info.outputs.tag_name }}.deb">arm64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-armv7l-${{ steps.get_release_info.outputs.tag_name }}.deb">arm32</a> </td> </tr> <tr> <td>Linux/rpm</td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-x64-${{ steps.get_release_info.outputs.tag_name }}.rpm">x64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-arm64-${{ steps.get_release_info.outputs.tag_name }}.rpm">arm64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-armv7l-${{ steps.get_release_info.outputs.tag_name }}.rpm">arm32</a> </td> </tr> <tr> <td>Linux/AppImage</td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-x64-${{ steps.get_release_info.outputs.tag_name }}.AppImage">x64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-arm64-${{ steps.get_release_info.outputs.tag_name }}.AppImage">arm64</a> </td> <td><a href="https://github.com/nab138/OxplorerGUI/releases/download/${{ steps.get_release_info.outputs.tag_name }}/OxplorerGUI-linux-armv7l-${{ steps.get_release_info.outputs.tag_name }}.AppImage">arm32</a> </td> </tr></table>'
      - name: Mark as latest
        run: |
          gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/nab138/OxplorerGUI/releases/${{ github.event.release.id }} -f make_latest=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
